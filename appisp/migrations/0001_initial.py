# Generated by Django 5.1.5 on 2025-08-14 16:48

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Fabricante',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=255, unique=True)),
            ],
            options={
                'ordering': ['nome'],
            },
        ),
        migrations.CreateModel(
            name='Empresa',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('nome', models.CharField(max_length=255)),
                ('endereco', models.TextField()),
                ('cidade', models.CharField(max_length=100)),
                ('estado', models.CharField(max_length=2)),
                ('telefone', models.CharField(max_length=20)),
                ('cpf_cnpj', models.CharField(max_length=18, unique=True)),
                ('representante', models.CharField(max_length=255)),
                ('email', models.EmailField(max_length=254)),
                ('status', models.CharField(choices=[('ATIVA', 'Ativa'), ('INATIVA', 'Inativa')], default='ATIVA', max_length=10)),
                ('usuarios', models.ManyToManyField(related_name='empresas', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['nome'],
            },
        ),
        migrations.CreateModel(
            name='EmpresaToken',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('token', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('empresa', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='token', to='appisp.empresa')),
            ],
        ),
        migrations.CreateModel(
            name='Equipamento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=255)),
                ('ip', models.GenericIPAddressField()),
                ('usuario', models.CharField(max_length=255)),
                ('senha', models.CharField(max_length=255)),
                ('porta', models.PositiveIntegerField()),
                ('protocolo', models.CharField(choices=[('SSH', 'SSH'), ('TELNET', 'Telnet'), ('WEB', 'Web'), ('Winbox', 'Winbox'), ('Remoto', 'Remoto')], max_length=10)),
                ('x', models.FloatField(default=20.5)),
                ('y', models.FloatField(default=30.5)),
                ('tipo', models.CharField(choices=[('Switch', 'Switch'), ('Roteador', 'Roteador'), ('Servidor', 'Servidor'), ('VMWARE', 'VMWARE'), ('AccesPoint', 'AccesPoint'), ('Passivo', 'Passivo'), ('Olt', 'Olt'), ('Transporte', 'Transporte'), ('Impressora', 'Impressora'), ('Computador', 'Computador'), ('Telefone', 'Telefone')], default='Switch', max_length=50)),
                ('status', models.CharField(choices=[('Ativo', 'Ativo'), ('Inativo', 'Inativo')], default='Ativo', max_length=20)),
                ('observacao', models.TextField()),
                ('empresa', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='appisp.empresa')),
                ('fabricante', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='appisp.fabricante')),
            ],
            options={
                'ordering': ['nome'],
            },
        ),
        migrations.CreateModel(
            name='BlocoIP',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo_ip', models.CharField(choices=[('IPv4', 'IPv4'), ('IPv6', 'IPv6')], default='IPv4', max_length=4)),
                ('bloco_cidr', models.CharField(max_length=50)),
                ('descricao', models.CharField(blank=True, max_length=255, null=True)),
                ('next_hop', models.GenericIPAddressField(blank=True, null=True)),
                ('criado_em', models.DateTimeField(auto_now_add=True)),
                ('monitorar', models.BooleanField(default=False)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sub_blocos', to='appisp.blocoip')),
                ('empresa', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='blocos_ip', to='appisp.empresa')),
                ('equipamento', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='blocos', to='appisp.equipamento')),
            ],
            options={
                'verbose_name_plural': 'Blocos de IP',
                'ordering': ['bloco_cidr'],
            },
        ),
        migrations.CreateModel(
            name='IntegracaoNetbox',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url', models.URLField(help_text='Ex: https://netbox.suaempresa.com/api/', verbose_name='URL da API NetBox')),
                ('token', models.CharField(help_text='Token de acesso gerado no NetBox', max_length=255, verbose_name='Token de API')),
                ('observacoes', models.TextField(blank=True, help_text='Informações adicionais da integração', null=True)),
                ('ativo', models.BooleanField(default=True, help_text='Marque para habilitar a integração com o NetBox')),
                ('data_criacao', models.DateTimeField(auto_now_add=True)),
                ('ultima_sincronizacao', models.DateTimeField(blank=True, help_text='Data da última sincronização com o NetBox', null=True)),
                ('empresa', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='integracao_netbox', to='appisp.empresa')),
            ],
            options={
                'verbose_name': 'Integração com NetBox',
                'verbose_name_plural': 'Integrações com NetBox',
                'ordering': ['empresa'],
            },
        ),
        migrations.CreateModel(
            name='IntegracaoZabbix',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url', models.URLField(help_text='Ex: http://zabbix.suaempresa.com/api_jsonrpc.php', verbose_name='URL da API Zabbix')),
                ('usuario', models.CharField(help_text='Usuário com permissão de API no Zabbix', max_length=100, verbose_name='Usuário Zabbix')),
                ('senha', models.CharField(max_length=100, verbose_name='Senha Zabbix')),
                ('token', models.CharField(blank=True, max_length=255, null=True, verbose_name='Token de API')),
                ('observacoes', models.TextField(blank=True, help_text='Informações adicionais da integração', null=True)),
                ('ativo', models.BooleanField(default=True, help_text='Marque para habilitar a integração')),
                ('data_criacao', models.DateTimeField(auto_now_add=True)),
                ('ultima_sincronizacao', models.DateTimeField(blank=True, help_text='Data da última sincronização com o Zabbix', null=True)),
                ('empresa', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='integracao_zabbix', to='appisp.empresa')),
            ],
            options={
                'verbose_name': 'Integração com Zabbix',
                'verbose_name_plural': 'Integrações com Zabbix',
                'ordering': ['empresa'],
            },
        ),
        migrations.CreateModel(
            name='MaquinaVirtual',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=255)),
                ('memoria', models.PositiveIntegerField(help_text='Memória em MB')),
                ('num_processadores', models.PositiveIntegerField()),
                ('num_cores', models.PositiveIntegerField()),
                ('sistema_operacional', models.CharField(max_length=255)),
                ('tipo_acesso', models.CharField(choices=[('SSH', 'SSH'), ('TELNET', 'Telnet'), ('RDP', 'Área de Trabalho'), ('WEB', 'Web')], max_length=10)),
                ('porta', models.PositiveIntegerField()),
                ('usuario', models.CharField(max_length=255)),
                ('senha', models.CharField(max_length=255)),
                ('observacao', models.TextField(help_text='Para Formata o texto, use < /br> quebra de linha, < strong><strong>Negrito</strong>< /strong>, sem espaços')),
                ('empresa', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='appisp.empresa')),
                ('equipamento', models.ForeignKey(limit_choices_to={'tipo': 'VMWARE'}, on_delete=django.db.models.deletion.CASCADE, related_name='maquinas_virtuais', to='appisp.equipamento')),
            ],
            options={
                'ordering': ['nome'],
            },
        ),
        migrations.CreateModel(
            name='Disco',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tamanho', models.CharField(max_length=50)),
                ('maquina', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='discos', to='appisp.maquinavirtual')),
            ],
        ),
        migrations.CreateModel(
            name='Modelo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('modelo', models.CharField(max_length=255, verbose_name='Modelo')),
                ('slug', models.SlugField(blank=True, max_length=255, null=True, verbose_name='Identificador')),
                ('part_number', models.CharField(blank=True, max_length=255, null=True, verbose_name='Serial number')),
                ('altura', models.IntegerField(blank=True, null=True, verbose_name='Altura (U)')),
                ('is_full_depth', models.BooleanField(default=False, verbose_name='Profundidade total?')),
                ('airflow', models.CharField(blank=True, max_length=255, null=True, verbose_name='Fluxo de ar')),
                ('descricao', models.TextField(blank=True, null=True, verbose_name='Descrição')),
                ('imagem_frontal', models.ImageField(blank=True, null=True, upload_to='modelos/', verbose_name='Imagem frente')),
                ('imagem_traseira', models.ImageField(blank=True, null=True, upload_to='modelos/', verbose_name='Imagem tras')),
                ('fabricante', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='appisp.fabricante', verbose_name='Fabricante')),
            ],
            options={
                'verbose_name_plural': 'Equipamentos modelo',
                'ordering': ['modelo'],
            },
        ),
        migrations.AddField(
            model_name='equipamento',
            name='modelo',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='appisp.modelo'),
        ),
        migrations.CreateModel(
            name='Pop',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=255)),
                ('endereco', models.TextField()),
                ('cidade', models.CharField(max_length=100)),
                ('empresa', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='appisp.empresa')),
            ],
            options={
                'ordering': ['nome'],
            },
        ),
        migrations.AddField(
            model_name='equipamento',
            name='pop',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='appisp.pop'),
        ),
        migrations.CreateModel(
            name='Porta',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=50)),
                ('speed', models.CharField(choices=[('100M', '100 Mbps'), ('1G', '1 Gbps'), ('10G', '10 Gbps'), ('25G', '25 Gbps'), ('40G', '40 Gbps'), ('100G', '100 Gbps')], default='1G', max_length=10)),
                ('tipo', models.CharField(choices=[('Eletrico', 'Elétrico'), ('Fibra', 'Fibra'), ('Radio', 'Rádio'), ('Transporte', 'Transporte')], default='Fibra', max_length=10)),
                ('observacao', models.TextField(help_text='Para Formata o texto, use < /br> quebra de linha, < strong><strong>Negrito</strong>< /strong>, sem espaços')),
                ('conexao', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='conexao_inversa', to='appisp.porta')),
                ('empresa', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='portas', to='appisp.empresa')),
                ('equipamento', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='portas', to='appisp.equipamento')),
            ],
            options={
                'verbose_name_plural': 'Equipamentos porta',
                'ordering': ['nome'],
            },
        ),
        migrations.CreateModel(
            name='Rack',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=255)),
                ('us', models.PositiveIntegerField(default=20)),
                ('modelo', models.CharField(blank=True, max_length=255, null=True)),
                ('observacao', models.TextField(blank=True, null=True)),
                ('empresa', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='appisp.empresa')),
                ('pop', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='appisp.pop')),
            ],
            options={
                'ordering': ['nome'],
            },
        ),
        migrations.CreateModel(
            name='Rede',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=255)),
                ('ip', models.GenericIPAddressField()),
                ('maquina', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='redes', to='appisp.maquinavirtual')),
            ],
        ),
        migrations.CreateModel(
            name='Vlan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numero', models.PositiveIntegerField()),
                ('nome', models.CharField(blank=True, max_length=255, null=True)),
                ('tipo', models.CharField(choices=[('Acesso', 'Acesso'), ('Trunk', 'Trunk')], default='Acesso', max_length=10)),
                ('status', models.CharField(choices=[('Ativa', 'Ativa'), ('Inativa', 'Inativa')], default='Ativa', max_length=10)),
                ('empresa', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='vlans', to='appisp.empresa')),
                ('equipamento', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='vlans', to='appisp.equipamento')),
            ],
            options={
                'ordering': ['numero'],
                'unique_together': {('empresa', 'numero')},
            },
        ),
        migrations.CreateModel(
            name='Interface',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100)),
                ('tipo', models.CharField(max_length=100)),
                ('poe', models.BooleanField(default=False)),
                ('mgmt_only', models.BooleanField(default=False)),
                ('descricao', models.CharField(blank=True, max_length=255, null=True)),
                ('modelo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='interfaces', to='appisp.modelo')),
            ],
            options={
                'unique_together': {('modelo', 'nome')},
            },
        ),
        migrations.CreateModel(
            name='EnderecoIP',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ip', models.GenericIPAddressField(blank=True, null=True)),
                ('finalidade', models.TextField(blank=True, null=True)),
                ('next_hop', models.GenericIPAddressField(blank=True, null=True)),
                ('is_gateway', models.BooleanField(default=False)),
                ('criado_em', models.DateTimeField(auto_now_add=True)),
                ('bloco', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='enderecos', to='appisp.blocoip')),
                ('equipamento', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ips', to='appisp.equipamento')),
                ('porta', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ips', to='appisp.porta')),
            ],
            options={
                'ordering': ['ip'],
                'unique_together': {('bloco', 'ip', 'equipamento')},
            },
        ),
        migrations.CreateModel(
            name='RackEquipamento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('us_inicio', models.PositiveIntegerField()),
                ('us_fim', models.PositiveIntegerField()),
                ('lado', models.CharField(choices=[('Frente', 'Frente'), ('Trás', 'Trás')], default='Frente', max_length=10)),
                ('equipamento', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='appisp.equipamento')),
                ('rack', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='equipamentos', to='appisp.rack')),
            ],
            options={
                'ordering': ['equipamento'],
                'unique_together': {('rack', 'us_inicio', 'lado')},
            },
        ),
        migrations.CreateModel(
            name='VlanPorta',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo', models.CharField(choices=[('Access', 'Access'), ('Trunk', 'Trunk'), ('Ibrida', 'Ibrida')], default='Access', max_length=10)),
                ('vlan_nativa', models.BooleanField(default=False)),
                ('empresa', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='vlan_portas', to='appisp.empresa')),
                ('equipamento', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='vlan_portas', to='appisp.equipamento')),
                ('porta', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='vlan_portas', to='appisp.porta')),
                ('vlan', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='vlan_portas', to='appisp.vlan')),
                ('vlans_permitidas', models.ManyToManyField(blank=True, related_name='permitidas_em_portas', to='appisp.vlan')),
            ],
            options={
                'unique_together': {('vlan', 'porta')},
            },
        ),
    ]
